version: '3'

x-base: &base
  env_file:
    - ./.env

x-mysql: &mysql
  <<: *base
  environment:
    - MYSQL_DATABSE=${MYSQL_DATABASE}
    - MYSQL_USER=${MYSQL_USER}
    - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    - MYSQL_ROOT_PASSWORD=${MYSQL_DB_ROOT_PASSWORD}

x-phpmyadmin: &phpmyadmin
  environment:
    - PMA_HOST=${MYSQL_DB_HOST}
    - PMA_USER=root
    - PMA_PASSWORD=${MYSQL_DB_ROOT_PASSWORD}

x-mysql-volumes: &mysql-volumes
  - ./../storages/mysql:/var/lib/mysql

x-web-volumes: &web-volumes
  - ./../project:/var/www/project
  - ./nginx/conf.d/:/etc/nginx/conf.d/

x-php-volumes: &php-volumes
  - ./../project:/var/www/project
  - ./php:/var/www/docker

x-queue-volumes: &queue-volumes
  - ./../project:/var/www/project
  - ./queue:/var/www/docker


services:
  php:
    <<: *base
    build:
      context: ./../
      dockerfile: ./docker/php/Dockerfile
    container_name: ${APP_NAME}_php
    depends_on:
      - mysql
      - redis
    networks:
      - app-network
    volumes: *php-volumes

  web:
    <<: *base
    image: nginx:alpine
    container_name: ${APP_NAME}_nginx
    ports:
      - 80:80
    networks:
      - app-network
    depends_on:
      - php
    volumes: *web-volumes

  mysql:
    <<: *mysql
    image: mysql:5.7.12
    container_name: ${APP_NAME}_mysql
    volumes: *mysql-volumes
    networks:
      - app-network

  phpmyadmin:
    <<: *phpmyadmin
    image: phpmyadmin/phpmyadmin
    container_name: ${APP_NAME}_phpmyadmin
    ports:
      - 1234:80
    depends_on:
      - mysql
    networks:
      - app-network

  redis:
    image: "redis:alpine"
    container_name: ${APP_NAME}_redis
    networks:
      - app-network

  queue:
    <<: *base
    container_name: ${APP_NAME}_queue
    build:
      context: ./../
      dockerfile: ./docker/queue/Dockerfile
    volumes: *queue-volumes
    depends_on:
      - php
    networks:
      - app-network
networks:
  app-network:
    driver: bridge